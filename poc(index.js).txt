/**
 * Triggered from a message on a Cloud Pub/Sub topic.
 *
 * @param {!Object} event Event payload.
 * @param {!Object} context Metadata for the event.
 */


const PubSub = require(`@google-cloud/pubsub`);
exports.helloPubSub = (req, res) => {
  const pubsubMessage = req.data;
  console.log(Buffer.from(pubsubMessage, 'base64').toString());
  

const {Spanner} = require('@google-cloud/spanner');
  // Creates a client
const spanner = new Spanner({
projectId:'poetic-bison-250611',
});
// Gets a reference to a Cloud Spanner instance and database
const instance = spanner.instance('task11');
const database = instance.database('task11_database');
const table = database.table('task');

const pubsub = new PubSub();
var dataArray=[]; 
var output={};
pubsub.getTopicsStream()
  .on('data', function(data) {
  dataArray.push(data);
   })
.on('end',()=>{
console.log(dataArray);
output['Rows processed']=dataArray.length;
  console.log(output);
});
  
async function upload(){
console.log("Reading Completed.");
try {
await table.insert(dataArray)
}
catch (err) {
console.error('error', err);
}
finally {
await database.close();
}
}
upload();
};
